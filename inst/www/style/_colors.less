// === Color palette ===

@panelTextHeaderColor: 		rgb(102, 102, 102);

@panelTextDefaultColor: 	rgb(112, 112, 112);
@panelTextLightColor:		rgb(180, 180, 180);
@panelTextActivatedColor: 	rgb(128, 128, 128);
@panelTextHoverColor: 		rgb(82, 82, 82);
@panelTextDisabledColor:	rgb(206, 206, 206);

@panelBackgroundDefaultColor: 		rgb(245, 245, 245);
@panelBackgroundHoverColor: 		rgb(216, 216, 216);
@panelBackgroundActivatedColor:		rgb(224, 224, 224);

@panelButtonBackgroundDefaultColor:	rgb(180, 180, 180);
@panelButtonBackgroundHoverColor:	rgb(170, 170, 170);
@panelShadowColor: 					rgba(50, 50, 50, 0.2);

@panelButtonTextDefaultColor: 		rgb(250, 250, 250);
@panelButtonTextHoverColor:			rgb(250, 250, 250);

@popupBackgroundDefaultColor: 		rgb(245, 245, 245);
@popupBorderColor: 					rgb(180, 180, 180);
@popupShadowColor: 					rgba(50, 50, 50, 0.7);


// NOTE: The following attempt to structure the namespace fails when we want to pass the color as argument of mixins
// .VSColor {
// 	.panel {
// 		.text {
// 			.headerColor	{color: rgb(80, 80, 80);}
// 			.defaultColor	{color: rgb(112, 112, 112);}
// 			.lightColor		{color: rgb(180, 180, 180);}
// 			.activatedColor	{color: rgb(128, 128, 128);}
// 			.hoverColor		{color: rgb(82, 82, 82);}
// 			.disabledColor	{color: rgb(206, 206, 206);}
// 		}
// 		.background {
// 			.defaultColor 	{background-color: rgb(245, 245, 245);}
// 			.hoverColor 	{background-color: rgb(216, 216, 216);}
// 			.activatedColor {background-color: rgb(224, 224, 224);}
// 		}
// 	}
// }


