// Generated by CoffeeScript 1.8.0
var appendDOM, buttonInvokedPopup, currentSubjectIdVariable, disableGraphs, eventHooks, init, onClickVariableRoleButton, registerEventHandler, renderVariables, replaceDOM, root, selectGraph, showExperimenalDesignHelp, updateExperimentalDesign, updateExperimentalDesignButton, updateVariableEnabling, warnRemove, _base, _base1;

buttonInvokedPopup = void 0;

currentSubjectIdVariable = void 0;

eventHooks = {
  variableInclusionDidChange: function(variableName, isIncluded) {},
  variableRoleDidChange: function(variableName, role) {},
  graphChoiceDidChange: function(graphName) {},
  didRemoveDesignDeterminer: function() {},
  variableRoleShouldChange: function(variableName, currentRole, selectedVarRole) {
    return true;
  }
};

registerEventHandler = function(eventName, handler) {
  eventHooks[eventName] = handler;
};

init = function() {
  $("#designDeterminerButton").css("visibility", "hidden");
  $(".panelItemButton").css("visibility", "hidden");
  $("#designSection").hover(function(event) {
    $("#designDeterminerButton").css("visibility", event.type === "mouseenter" ? "visible" : "hidden");
  });
  $(".varLabel").hover(function(event) {
    var targetButton;
    targetButton = $(event.currentTarget).find(".panelItemButton");
    if (targetButton.get(0) !== buttonInvokedPopup) {
      targetButton.css("visibility", event.type === "mouseenter" ? "visible" : "hidden");
    }
  });
  $(".variableRoleButton").click(onClickVariableRoleButton);
  $(".variableCheckbox").click(function(event) {
    var button, checkbox;
    checkbox = $(event.currentTarget);
    button = $(event.currentTarget).parent().find("#variableRoleButton");
    if (button.text() === "?") {
      button.pulse({
        opacity: 0.1
      }, {
        duration: 100,
        pulses: 5
      });
      checkbox.prop("checked", false);
      return;
    }
    eventHooks["variableInclusionDidChange"](checkbox.prop("name"), checkbox.prop("checked"));
  });
  $(".graphRadio").click(function(event) {
    return eventHooks["graphChoiceDidChange"]($(event.currentTarget).val());
  });
};

updateVariableEnabling = function() {
  var k, v;
  $("input.variableCheckbox").removeAttr("disabled");
  currentSubjectIdVariable = $(".variableRoleDisplay:contains('ID')").parents(".varLabel").find(".variableName").first().text();
  for (k in variables) {
    v = variables[k];
    if (v === "ID") {
      k;
    }
  }
  return $("input.variableCheckbox[name='" + currentSubjectIdVariable + "']").attr("disabled", "disabled").removeAttr("checked");
};

disableGraphs = function(graphNames) {
  var aName, _i, _len;
  $(".graphRadio").prop("disabled", false);
  for (_i = 0, _len = graphNames.length; _i < _len; _i++) {
    aName = graphNames[_i];
    $(".graphRadio[value='" + aName + "']").prop("disabled", true);
  }
};

selectGraph = function(graphName, isSelected) {
  var graph;
  $(".graphRadio").prop("checked", false);
  graph = $(".graphRadio[value='" + graphName + "']");
  if (graph.prop("disabled")) {
    graph.prop("disabled", false);
  }
  graph.prop("checked", isSelected);
};

appendDOM = function(parentSelector, html) {
  $(parentSelector).append($.parseHTML(html));
};

replaceDOM = function(parentSelector, html) {
  $(parentSelector).replaceWith($.parseHTML(html));
};

renderVariables = function(variables) {
  var aVariableName, aVariableRole, html;
  html = "";
  for (aVariableName in variables) {
    aVariableRole = variables[aVariableName];
    html += "<label class='varLabel' id='varLabel_" + aVariableName + "'>\n    <input type='checkbox' class='variableCheckbox' name='" + aVariableName + "'/>\n    <span class='variableName'>" + aVariableName + "</span>\n    <span class=\"variableRole\">\n		    		<span class=\"variableRoleDisplay\">" + aVariableRole + "</span>\n		    		<button id=\"variableRoleButton\" class=\"panelItemButton variableRoleButton\">" + aVariableRole + "</button>\n		    	</span>\n</label>";
  }
  appendDOM('#variableSection', html);
  updateVariableEnabling();
};

updateExperimentalDesign = function(design, determiner) {
  var designText;
  designText = (function() {
    switch (design) {
      case "within-groups":
        return "Within-subjects design";
      case "between-groups":
        return "Between-subjects design";
    }
  })();
  $("#designName").text(designText);
  $("#designDeterminerVariable").text(determiner != null ? determiner : "rows");
  $("#designDeterminerVariable").toggleClass("isVariable", determiner != null);
  updateExperimentalDesignButton(determiner != null);
};

updateExperimentalDesignButton = function(withVariable) {
  if (withVariable == null) {
    withVariable = false;
  }
  $("#designDeterminerButton").text(withVariable ? "x" : "?");
  $("#designDeterminerButton").off("click").click(withVariable ? warnRemove : showExperimenalDesignHelp);
};

warnRemove = function(event) {
  if (confirm("Press OK to remove determiner variable. This will reset the current graph.")) {
    eventHooks["didRemoveDesignDeterminer"]();
  }
};

showExperimenalDesignHelp = function(event) {
  console.log("showExperimenalDesignHelp");
};

onClickVariableRoleButton = function(event) {
  var preSelectedRadio, varRoleButton, varRoleMenu;
  event.stopPropagation();
  buttonInvokedPopup = event.currentTarget;
  varRoleButton = $(buttonInvokedPopup);
  varRoleMenu = $("#variableRoleMenu");
  varRoleMenu.css("left", event.pageX).css("top", event.pageY);
  preSelectedRadio = $("input.variableRole[name='varRoleRadio'][value='" + (varRoleButton.text()) + "']");
  if (preSelectedRadio.length > 0) {
    preSelectedRadio.prop("checked", true);
  } else {
    $("input.variableRole[name='varRoleRadio']").prop("checked", false);
  }
  varRoleMenu.fadeIn(200, function() {
    var hideRoleMenu;
    hideRoleMenu = function(event) {
      varRoleMenu.fadeOut(200);
      varRoleButton.animate({
        "opacity": "0.1"
      }, 1000, function() {
        return varRoleButton.css("visibility", "hidden").css("opacity", "1.0");
      });
      buttonInvokedPopup = void 0;
      $(document).off("click", hideRoleMenu);
      $(".variableRoleRadioLabel").off("click", hideRoleMenu);
    };
    $(document).click(hideRoleMenu);
    $("label.variableRoleRadioLabel").click(function(event) {
      var currentRole, prevIdVariable, selectedVarRole, variableName;
      event.stopPropagation();
      variableName = varRoleButton.parent().prev().text();
      selectedVarRole = $("input.variableRole[name='varRoleRadio']:checked").val();
      currentRole = varRoleButton.text();
      if (currentRole === selectedVarRole) {
        return;
      }
      if (!eventHooks["variableRoleShouldChange"](variableName, currentRole, selectedVarRole)) {
        $("input.variableRole[name='varRoleRadio'][value='" + currentRole + "']").prop("checked", true);
        return;
      }
      varRoleButton.text(selectedVarRole);
      varRoleButton.prev().text(selectedVarRole);
      if (selectedVarRole === "ID") {
        prevIdVariable = currentSubjectIdVariable;
        currentSubjectIdVariable = variableName;
        $("#varLabel_" + prevIdVariable).find(".variableRoleDisplay").text("?").end().find("#variableRoleButton").text("?");
      }
      eventHooks["variableRoleDidChange"](variableName, selectedVarRole);
      return updateVariableEnabling();
    });
  });
};

root = typeof exports !== "undefined" && exports !== null ? exports : this;

if (root.VisiStat == null) {
  root.VisiStat = {};
}

if ((_base = root.VisiStat).UI == null) {
  _base.UI = {};
}

if ((_base1 = root.VisiStat.UI).leftPane == null) {
  _base1.leftPane = {};
}

root.VisiStat.UI.leftPane.registerEventHandler = registerEventHandler;

root.VisiStat.UI.leftPane.init = init;

root.VisiStat.UI.leftPane.selectGraph = selectGraph;

root.VisiStat.UI.leftPane.disableGraphs = disableGraphs;

root.VisiStat.UI.leftPane.renderVariables = renderVariables;

root.VisiStat.UI.leftPane.updateExperimentalDesign = updateExperimentalDesign;

//# sourceMappingURL=rendering.js.map
